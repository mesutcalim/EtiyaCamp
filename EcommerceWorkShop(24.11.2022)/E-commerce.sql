-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public.address;

CREATE TABLE IF NOT EXISTS public.address
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Title" character varying COLLATE pg_catalog."default" NOT NULL,
    "CountryID" integer NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.categories;

CREATE TABLE IF NOT EXISTS public.categories
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.city;

CREATE TABLE IF NOT EXISTS public.city
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CityName" character varying COLLATE pg_catalog."default" NOT NULL,
    "DistrictID" integer NOT NULL,
    CONSTRAINT city_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.color;

CREATE TABLE IF NOT EXISTS public.color
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT color_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.country;

CREATE TABLE IF NOT EXISTS public.country
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CountryName" character varying COLLATE pg_catalog."default" NOT NULL,
    "CityID" integer NOT NULL,
    CONSTRAINT country_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.customer;

CREATE TABLE IF NOT EXISTS public.customer
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "PaymentID" integer NOT NULL,
    "RoleID" integer NOT NULL,
    "UserID" integer NOT NULL,
    CONSTRAINT customer_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.district;

CREATE TABLE IF NOT EXISTS public.district
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DistrictName" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT district_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public."orderDetails";

CREATE TABLE IF NOT EXISTS public."orderDetails"
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "OrderID" integer NOT NULL,
    "ProductID" integer NOT NULL,
    "Total" money NOT NULL,
    "Coupon" character varying COLLATE pg_catalog."default",
    CONSTRAINT "orderDetails_pkey" PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.orders;

CREATE TABLE IF NOT EXISTS public.orders
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "OrderDate" date NOT NULL,
    "ShipDate" date NOT NULL,
    "ShipperID" integer NOT NULL,
    "PaymentID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public."paymentMethod";

CREATE TABLE IF NOT EXISTS public."paymentMethod"
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "paymentMethod_pkey" PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.product;

CREATE TABLE IF NOT EXISTS public.product
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying COLLATE pg_catalog."default" NOT NULL,
    "UnitPrice" money NOT NULL,
    "Stock" integer NOT NULL,
    "CategoryID" integer NOT NULL,
    "ColorID" integer NOT NULL,
    CONSTRAINT product_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.role;

CREATE TABLE IF NOT EXISTS public.role
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RoleName" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT role_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.salesman;

CREATE TABLE IF NOT EXISTS public.salesman
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CompanyName" character varying COLLATE pg_catalog."default" NOT NULL,
    "RoleID" integer NOT NULL,
    "UserID" integer NOT NULL,
    CONSTRAINT salesman_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public.shipper;

CREATE TABLE IF NOT EXISTS public.shipper
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CompanyName" character varying COLLATE pg_catalog."default" NOT NULL,
    "PhoneNumber" "char" NOT NULL,
    "RoleID" integer NOT NULL,
    CONSTRAINT shipper_pkey PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS public."user";

CREATE TABLE IF NOT EXISTS public."user"
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "FirstName" character varying COLLATE pg_catalog."default" NOT NULL,
    "LastName" character varying COLLATE pg_catalog."default" NOT NULL,
    "PhoneNumber" character varying COLLATE pg_catalog."default" NOT NULL,
    "Email" character varying COLLATE pg_catalog."default" NOT NULL,
    "AddressID" integer NOT NULL,
    "Password" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_pkey PRIMARY KEY ("ID")
);

ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT "countryID_fk" FOREIGN KEY ("CountryID")
    REFERENCES public.country ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.city
    ADD CONSTRAINT "districtID_fk" FOREIGN KEY ("DistrictID")
    REFERENCES public.district ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.country
    ADD CONSTRAINT "cityID_fk" FOREIGN KEY ("CityID")
    REFERENCES public.city ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer
    ADD CONSTRAINT "RoleID_fk" FOREIGN KEY ("RoleID")
    REFERENCES public.role ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_RoleID_fk"
    ON public.customer("RoleID");


ALTER TABLE IF EXISTS public.customer
    ADD CONSTRAINT "UserID_fk" FOREIGN KEY ("UserID")
    REFERENCES public."user" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_UserID_fk"
    ON public.customer("UserID");


ALTER TABLE IF EXISTS public."orderDetails"
    ADD CONSTRAINT "OrderID_fk" FOREIGN KEY ("OrderID")
    REFERENCES public.orders ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_OrderID_fk"
    ON public."orderDetails"("OrderID");


ALTER TABLE IF EXISTS public."orderDetails"
    ADD CONSTRAINT "ProductID_fk" FOREIGN KEY ("ProductID")
    REFERENCES public.product ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_ProductID_fk"
    ON public."orderDetails"("ProductID");


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "CustomerID_fk" FOREIGN KEY ("CustomerID")
    REFERENCES public.customer ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_CustomerID_fk"
    ON public.orders("CustomerID");


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "PaymentID_fk" FOREIGN KEY ("PaymentID")
    REFERENCES public."paymentMethod" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_PaymentID_fk"
    ON public.orders("PaymentID");


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "ShipperID_fk" FOREIGN KEY ("ShipperID")
    REFERENCES public.shipper ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_ShipperID_fk"
    ON public.orders("ShipperID");


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "CategoryID_fk" FOREIGN KEY ("CategoryID")
    REFERENCES public.categories ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_CategoryID_fk"
    ON public.product("CategoryID");


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "ColorID_fk" FOREIGN KEY ("ColorID")
    REFERENCES public.color ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_ColorID_fk"
    ON public.product("ColorID");


ALTER TABLE IF EXISTS public.salesman
    ADD CONSTRAINT "RoleID_fk" FOREIGN KEY ("RoleID")
    REFERENCES public.role ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.salesman
    ADD CONSTRAINT "UserID_fk" FOREIGN KEY ("UserID")
    REFERENCES public."user" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shipper
    ADD CONSTRAINT "RoleID_fk" FOREIGN KEY ("RoleID")
    REFERENCES public.role ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."user"
    ADD CONSTRAINT "addressID_fk" FOREIGN KEY ("AddressID")
    REFERENCES public.address ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_addressID_fk"
    ON public."user"("AddressID");

END;